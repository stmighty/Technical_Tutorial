name: auto-tag-release

on:
  pull_request:
    types: [closed]
    branches: [main]

permissions:
  contents: write

jobs:
  tag:
    if: |
      github.event.pull_request.merged == true &&
      startsWith(github.event.pull_request.head.ref, 'release/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Configure git identity
        run: |
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global user.name  "${{ github.actor }}"

      - name: Set VERSION env
        id: vars
        run: |
          # ตัวอย่าง head.ref = "release/v1.2.3"
          VER="${{ github.event.pull_request.head.ref }}"
          VER="${VER#release/}"          # ตัด prefix ออก
          echo "VERSION=$VER" >> $GITHUB_ENV

      - name: Create & Push Tag
        run: |
          git tag -a "$VERSION" -m "Release $VERSION" "${{ github.event.pull_request.merge_commit_sha }}"
          git push origin "$VERSION"

      - name: Generate changelog
        id: changelog
        run: |
          PREV_TAG=$(git describe --tags --abbrev=0 "$VERSION"^ 2>/dev/null || echo "")
          if [ -z "$PREV_TAG" ]; then
              LOG=$(git log --pretty=format:"- %s")
          else
              LOG=$(git log "$PREV_TAG"..HEAD --pretty=format:"- %s")
          fi
          echo "LOG<<EOF" >> $GITHUB_OUTPUT
          echo "$LOG"      >> $GITHUB_OUTPUT
          echo "EOF"       >> $GITHUB_OUTPUT

      # ⬇️ 3) Create GitHub Release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2 # หรือ actions/create-release@v1 ก็ได้
        with:
          tag_name: ${{ env.VERSION }}
          name: ${{ env.VERSION }}
          body: ${{ steps.changelog.outputs.LOG }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
